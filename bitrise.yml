---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: react-native
workflows:
  deploy-ios-adhoc:
    description: ''
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
        inputs:
        - content: >
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # debug log

            set -x


            version=$BITRISE_GIT_TAG


            if [[ ${version} =~ ^(iOS|Android)-([0-9]+)\.([0-9]+)\.([0-9]+)-?.*$
            ]]; then
              all=${BASH_REMATCH[0]}
              platform=${BASH_REMATCH[1]}
              major=${BASH_REMATCH[2]}
              minor=${BASH_REMATCH[3]}
              patch=${BASH_REMATCH[4]}
              version=${BASH_REMATCH[2]}.${BASH_REMATCH[3]}.${BASH_REMATCH[4]}
            else
              version="0.0.0"
            fi

            envman add --key VERSION_STRING --value $version
    - set-ios-version@2:
        inputs:
        - bundle_version_short: $VERSION_STRING
        - bundle_version: $BITRISE_BUILD_NUMBER
        - info_plist_file: "./ios/VoximplantDemo/Info.plist"
    - yarn@0:
        inputs:
        - command: install
    - cocoapods-install@2: {}
    - script@1:
        inputs:
        - content: >-
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # debug log

            set -x


            # Create bundle for iOS

            npx react-native bundle --platform ios --dev false --entry-file
            index.js --bundle-output ios/main.jsbundle  --assets-dest ios
            --sourcemap-output ./main.jsbundle.map
        title: Create iOS bundle
    - certificate-and-profile-installer@1: {}
    - xcode-archive@3:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: Release
        - export_method: ad-hoc
        - configuration: Release
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
    envs:
    - $BITRISE_SCHEME: Staging
  deploy-android:
    description: ''
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
    - file-downloader@1:
        inputs:
        - destination: $PROJECT_LOCATION/gradle.properties
        - source: $BITRISEIO_BITRISEIO_gradleprop_URL_URL
    - yarn@0:
        inputs:
        - command: install
    - install-missing-android-tools@2:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - npm@1:
        inputs:
        - command: run jetify
    - script@1:
        title: Create Android bundle
        inputs:
        - content: >-
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # debug log

            set -x


            # create bundle
            npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output  --sourcemap-output android/app/src/main/assets/index.android.bundle android/app/src/main/assets/index.android.bundle.map --assets-dest android/app/src/main/res
            # delete duplicate resources

            rm -rf android/app/src/main/res/drawable-*

            rm -rf android/app/src/main/res/raw
    - gradle-runner@1:
        inputs:
        - gradle_file: ./android/build.gradle
        - gradlew_path: ./android/gradlew
        - gradle_task: assembleRelease
    - sign-apk@1: {}
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
  deploy-ios-store:
    description: ''
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
    - yarn@0:
        inputs:
        - command: install
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2: {}
    - xcode-archive@3:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - export_method: $BITRISE_EXPORT_METHOD
        - configuration: Release
    - 'git::https://github.com/SimonRice/bitrise-step-sentry-dsym-upload.git@main':
        inputs:
        - sentry_project_slug: $SENTRY_PROJECT_SLUG
        - sentry_org_slug: $SENTRY_ORG_SLUG
    - deploy-to-itunesconnect-deliver@2:
        inputs:
        - bundle_id: gauuud.VoximplantDemo
        - connection: api_key
        - api_key_path: $BITRISEIO_iTunesConnect_URL
        - api_issuer: cb000952-2a46-4af9-820d-a32c6d879b5f
    - cache-push@2: {}
  deploy-ios-debug:
    description: ''
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - script@1:
        title: Do anything with Script step
    - yarn@0:
        inputs:
        - command: install
    - script@1:
        inputs:
        - content: >-
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # debug log

            set -x


            # write your script here

            echo "Hello World!"


            # or run a script from your repository, like:

            # bash ./path/to/script.sh

            # not just bash, e.g.:

            # ruby ./path/to/script.rb

            npx react-native bundle --entry-file='index.js'
            --bundle-output='./ios/main.jsbundle' --dev=false --platform='ios'
            --assets-dest='./ios' --sourcemap-output ios/main.jsbundle.map
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2: {}
    - xcode-archive@3:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - export_method: $BITRISE_EXPORT_METHOD
        - force_code_sign_identity: iPhone Development
        - configuration: Release
    - deploy-to-bitrise-io@1: {}
    - cache-push@2: {}
app:
  envs:
  - opts:
      is_expand: false
    PROJECT_LOCATION: android
  - opts:
      is_expand: false
    MODULE: app
  - opts:
      is_expand: false
    VARIANT: Staging
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: ios/VoximplantDemo.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: Release
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: ad-hoc
  - opts:
      is_expand: false
    SENTRY_ORG_SLUG: individual-z9
  - opts:
      is_expand: false
    SENTRY_PROJECT_SLUG: react-native
  build-ios-alpha:
    steps:
    - activate-ssh-key@4: {}
    - git-clone@4: {}
    - cache-pull@2: {}
    - file-downloader@1:
        inputs:
        - destination: .env
        - source: $BITRISEIO_ENV_URL
        title: .env Download
    - set-xcode-build-number@1:
        inputs:
        - build_short_version_string: $VERSION_NUMBER
        - plist_path: ./ios/VoximplantDemo/Info.plist
    - yarn@0: {}
    - cocoapods-install@2: {}
    - script@1:
        inputs:
        - content: >-
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # debug log

            set -x


            # Create bundle for iOS

            npx react-native bundle --platform ios --dev false --entry-file
            index.js --bundle-output ios/main.jsbundle  --assets-dest ios
            --sourcemap-output ios/main.jsbundle.map
        title: Create iOS bundle
    - certificate-and-profile-installer@1: {}
    - xcode-archive@3:
        inputs:
        - export_method: ad-hoc
        - scheme: $BITRISE_SCHEME
        - configuration: $BITRISE_SCHEME
    - cache-push@2: {}
    - deploy-to-bitrise-io@1: {}
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Debug
    - opts:
        is_expand: false
      BUNDLE_ID: gauuud.VoximplantDemo.debug
trigger_map:
- tag: iOS-*.*.*
  workflow: deploy-ios-adhoc